import { useState } from "react";
import { Camera, Trash2 } from "lucide-react";
import imageUrl from "@assets/ChatGPT Image 5 —Å–µ–Ω—Ç. 2025 –≥., 23_21_09_1757103687517.png";

export default function AddItemPage() {
  const [itemName, setItemName] = useState("–§—É—Ç–±–æ–ª–∫–∞ –±–µ–ª–∞—è");
  const [selectedCategory, setSelectedCategory] = useState("–í–µ—Ä—Ö");
  const [selectedStyle, setSelectedStyle] = useState("–°–ø–æ—Ä—Ç");
  const [selectedSeason, setSelectedSeason] = useState("–õ–µ—Ç–æ");
  
  const hasAnyValue = itemName.trim() || selectedCategory !== "–í–µ—Ä—Ö" || selectedStyle !== "–°–ø–æ—Ä—Ç" || selectedSeason !== "–õ–µ—Ç–æ";

  return (
    <div className="flex-1 bg-background pb-20">
      <div className="p-6">
        {/* Image Section */}
        <div className="w-full max-w-sm mx-auto mb-6">
          <div 
            className="w-full rounded-2xl relative overflow-hidden border-2 border-border bg-muted"
            style={{ aspectRatio: '1/1' }}
          >
            <img
              src={imageUrl}
              alt="Uploaded item"
              className="w-full h-full object-cover"
            />
          </div>
        </div>

        {/* Action Buttons */}
        <div className="grid grid-cols-2 gap-3 mb-6">
          <button className="flex items-center justify-center gap-2 py-3 px-4 bg-muted rounded-xl text-foreground hover:bg-muted/80 transition-colors" data-testid="button-retake">
            <Camera size={20} />
            –ü–µ—Ä–µ—Å–Ω—è—Ç—å
          </button>
          <button className="flex items-center justify-center gap-2 py-3 px-4 bg-muted rounded-xl text-foreground hover:bg-muted/80 transition-colors" data-testid="button-delete">
            <Trash2 size={20} />
            –£–¥–∞–ª–∏—Ç—å
          </button>
        </div>

        {/* Item Details */}
        <div className="space-y-4">
          {/* Name */}
          <div>
            <label className="block text-sm font-medium text-muted-foreground mb-2">–ù–∞–∑–≤–∞–Ω–∏–µ</label>
            <input
              type="text"
              value={itemName}
              onChange={(e) => setItemName(e.target.value)}
              className="w-full text-lg font-semibold bg-transparent border-none outline-none text-foreground"
              data-testid="input-name"
            />
          </div>

          {/* Category */}
          <div>
            <label className="block text-sm font-medium text-muted-foreground mb-2">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</label>
            <div className="flex items-center gap-3">
              <div className="w-6 h-6 flex items-center justify-center">
                üëï
              </div>
              <select
                value={selectedCategory}
                onChange={(e) => setSelectedCategory(e.target.value)}
                className="flex-1 text-lg font-semibold bg-transparent border-none outline-none text-foreground"
                data-testid="select-category"
              >
                <option value="–í–µ—Ä—Ö">–í–µ—Ä—Ö</option>
                <option value="–ù–∏–∑">–ù–∏–∑</option>
                <option value="–û–±—É–≤—å">–û–±—É–≤—å</option>
                <option value="–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã">–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã</option>
                <option value="–ö—É—Ä—Ç–∫–∏">–ö—É—Ä—Ç–∫–∏</option>
                <option value="–ì–æ–ª–æ–≤–Ω—ã–µ —É–±–æ—Ä—ã">–ì–æ–ª–æ–≤–Ω—ã–µ —É–±–æ—Ä—ã</option>
              </select>
            </div>
          </div>

          {/* Style */}
          <div>
            <label className="block text-sm font-medium text-muted-foreground mb-2">–°—Ç–∏–ª—å</label>
            <select
              value={selectedStyle}
              onChange={(e) => setSelectedStyle(e.target.value)}
              className="w-full text-lg font-semibold bg-transparent border-none outline-none text-foreground"
              data-testid="select-style"
            >
              <option value="–°–ø–æ—Ä—Ç">–°–ø–æ—Ä—Ç</option>
              <option value="–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π">–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π</option>
              <option value="–ö–∞–∂—É–∞–ª">–ö–∞–∂—É–∞–ª</option>
              <option value="–≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–π">–≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–π</option>
            </select>
          </div>

          {/* Season */}
          <div>
            <label className="block text-sm font-medium text-muted-foreground mb-2">–°–µ–∑–æ–Ω</label>
            <select
              value={selectedSeason}
              onChange={(e) => setSelectedSeason(e.target.value)}
              className="w-full text-lg font-semibold bg-transparent border-none outline-none text-foreground"
              data-testid="select-season"
            >
              <option value="–õ–µ—Ç–æ">–õ–µ—Ç–æ</option>
              <option value="–ó–∏–º–∞">–ó–∏–º–∞</option>
              <option value="–í–µ—Å–Ω–∞">–í–µ—Å–Ω–∞</option>
              <option value="–û—Å–µ–Ω—å">–û—Å–µ–Ω—å</option>
            </select>
          </div>
        </div>

        {/* Save Button */}
        <div className="mt-8">
          <button
            className="w-full py-3 px-4 rounded-xl font-medium transition-colors"
            style={{
              backgroundColor: hasAnyValue ? '#112250' : '#e5e7eb',
              color: hasAnyValue ? 'white' : '#6b7280'
            }}
            disabled={!hasAnyValue}
            data-testid="button-save"
          >
            –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
          </button>
        </div>
      </div>
    </div>
  );
}